" vim: set ft=vim:


filetype plugin indent on
syntax enable

set background=dark
colorscheme rdark
"colo no_quarter
"colo railscasts
"colo ir_black
"colo herald
"colo slate

"set noimd

set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1

set t_Co=256
set guifont=Droid\ Sans\ Mono:h12
set guifontwide=M+\ 1mn:h10
set ai! 

set number
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85
set nowrap
"set cursorline
"set cursorcolumn
set noswapfile
set nobackup
set nowritebackup

set tags=./tags;/
set autochdir

set go=
set foldmethod=syntax
set mouse=a
"Disable bell
set noeb vb t_vb=

set history=1000
set hlsearch
set incsearch

set clipboard+=unnamed " Enable OS clipboard integration.

"
" GLOBAL SETTINGS
"

" Write contents of the file, if it has been modified, on buffer exit
"set autowrite

" Allow backspacing over everything
set backspace=indent,eol,start

" Insert mode completion options
set completeopt+=longest
"set completeopt=menu,longest,preview
"set completeopt=menuone,longest,preview

" Always show status line, even for one window
set laststatus=2
"set statusline=%t%r%h%w\ [%Y]\ [%{&ff}]\ [%{&fenc}:%{&enc}]\ [%08.8L]\ [%p%%-%P]\ [%05.5b]\ [%04.4B]\ [%08.8l]%<\ [%04.4c-%04.4v%04.4V]
"set statusline=%<[%n]\ %F\ %h%m%r%=%k[%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}][%{&ff}][ASCII=\%03.3b]\ %-10.(%l,%c%V%)\ %P

" Jump to matching bracket for 2/10th of a second (works with showmatch)
set matchtime=2

" Enable CTRL-A/CTRL-X to work on octal and hex numbers, as well as characters
set nrformats=octal,hex,alpha

" Show line, column number, and relative position within a file in the status line
set ruler

" Scroll when cursor gets within 3 characters of top/bottom edge
set scrolloff=3

" Round indent to multiple of 'shiftwidth' for > and < commands
set shiftround

" Use 4 spaces for (auto)indent
set shiftwidth=4

" Show (partial) commands (or size of selection in Visual mode) in the status line
"set showcmd

" When a bracket is inserted, briefly jump to a matching one
set showmatch

" Don't request terminal version string (for xterm)
set t_RV=

" Use 4 spaces for <Tab> and :retab
set tabstop=4

" Write swap file to disk after every 50 characters
set updatecount=50

" Remember things between sessions
"
" '20  - remember marks for 20 previous files
" \"50 - save 50 lines for each register
" :20  - remember 20 items in command-line history 
" %    - remember the buffer list (if vim started without a file arg)
" n    - set name of viminfo file
set viminfo='20,\"50,:20,%,n~/.viminfo

" Use menu to show command-line completion (in 'full' case)
set wildmenu

set noexpandtab

"set list
"set listchars=tab:▸\ ,trail:¬,eol:«  " Invisible characters.

" Set command-line completion mode:
"   - on first <Tab>, when more than one match, list all matches and complete
"     the longest common  string
"   - on second <Tab>, complete the next full match and show menu
set wildmode=list:longest,full

" Go back to the position the cursor was on the last time this file was edited
au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")|execute("normal `\"")|endif

" Fix my <Backspace> key (in Mac OS X Terminal)
set t_kb=
fixdel

" html_indent
"let g:html_indent_inctags = "html,body,head,tbody"
"let g:html_indent_script1 = "inc"
"let g:html_indent_style1 = "inc"

" convert to html
let html_use_css = 1
let use_xhtml = 1

let mapleader=","

"auto save/open file rec
"au VimEnter * source ~/.vim/.session
au VimLeave * mks! ~/.vim/.session

" Heneric highlight changes
"highlight Comment cterm=none ctermfg=Gray
"highlight Match cterm=none ctermfg=red
"highlight IncSearch cterm=none ctermfg=Black ctermbg=DarkYellow
"highlight Search cterm=none ctermfg=Black ctermbg=DarkYellow
"highlight String cterm=none ctermfg=DarkGreen
"highlight treeDir cterm=none ctermfg=Cyan
"highlight treeUp cterm=none ctermfg=DarkYellow
"highlight treeCWD cterm=none ctermfg=DarkYellow
"highlight netrwDir cterm=none ctermfg=Cyan
highlight cursorline cterm=none ctermbg=none guibg=#303030

au BufWinEnter,FileType html setfiletype htmldjango
au BufWinEnter,FileType html colo darkblue
au BufWinEnter,FileType *.json,*jshintrc setfiletype javascript
au FileType javascript set et sw=2 ts=2 sts=2 ff=unix fdm=syntax fenc=utf8
au FileType less set et sw=2 ts=2 sts=2 ff=unix fdm=marker fenc=utf8
au FileType css set et sw=2 ts=2 sts=2 ff=unix fdm=indent fenc=utf8
au FileType python set et sw=2 ts=2 sts=2 ff=unix fdm=syntax fenc=utf8
au FileType python map <buffer> <S-e> :w<CR>:!/usr/bin/env python % <CR>

au! bufwritepost,FileType vim source ~/.vimrc
au! bufwritepost,FileType less !lessc % > %:t:r.css "auto gen .css when .less writen

au FileType qf call AdjustWindowHeight(3, 10)
function! AdjustWindowHeight(minheight, maxheight)
	exe max([min([line("$"), a:maxheight]), a:minheight]) . "wincmd _"
endfunction

set wildignore+=.hg,.git,.svn
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest
set wildignore+=*.sw?
set wildignore+=*.DS_Store
set wildignore+=*.pyc
set wildignore+=*.egg,*.egg-info
set wildignore+=*.orig

if has("gui_running")
    "winpos 505 0
	"set lines=64 columns=133
	set transparency=10
	set guifont=monofur:h14
	set go+=e
	set guicursor=a:blinkon0 "disable blink cursor for macvim"
	"colo freya
	"colo lucius
	colo jellybeans
	"colo herald 
	if &ft == "html" || &ft == "less" 
        colors lucius
	endif 
endif


